{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","AddTutorial","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","state","description","published","submitted","e","this","setState","target","value","TutorialDataService","then","response","console","log","catch","className","onClick","htmlFor","type","required","onChange","name","Component","Tutorial","getTutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","match","params","prevState","status","update","history","push","TutorialsList","onChangeSearchTitle","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchTitle","tutorials","currentIndex","getAll","tutorial","index","deleteAll","findByTitle","placeholder","map","key","to","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.2cd554a3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass TutorialDataService {\r\n  getAll() {\r\n    return http.get(\"/tutorials\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/tutorials/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/tutorials\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/tutorials/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/tutorials/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/tutorials`);\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/tutorials?title=${title}`);\r\n  }\r\n}\r\n\r\nexport default new TutorialDataService();","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class AddTutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\", \r\n      published: false,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  saveTutorial() {\r\n    var data = {\r\n      title: this.state.title,\r\n      description: this.state.description\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          published: response.data.published,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                required\r\n                value={this.state.title}\r\n                onChange={this.onChangeTitle}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class Tutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.getTutorial = this.getTutorial.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateTutorial = this.updateTutorial.bind(this);\r\n    this.deleteTutorial = this.deleteTutorial.bind(this);\r\n\r\n    this.state = {\r\n      currentTutorial: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        published: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTutorial(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentTutorial: {\r\n          ...prevState.currentTutorial,\r\n          title: title\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        description: description\r\n      }\r\n    }));\r\n  }\r\n\r\n  getTutorial(id) {\r\n    TutorialDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentTutorial: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePublished(status) {\r\n    var data = {\r\n      id: this.state.currentTutorial.id,\r\n      title: this.state.currentTutorial.title,\r\n      description: this.state.currentTutorial.description,\r\n      published: status\r\n    };\r\n\r\n    TutorialDataService.update(this.state.currentTutorial.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentTutorial: {\r\n            ...prevState.currentTutorial,\r\n            published: status\r\n          }\r\n        }));\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateTutorial() {\r\n    TutorialDataService.update(\r\n      this.state.currentTutorial.id,\r\n      this.state.currentTutorial\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The tutorial was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteTutorial() {    \r\n    TutorialDataService.delete(this.state.currentTutorial.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/tutorials')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentTutorial } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentTutorial ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Tutorial</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={currentTutorial.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentTutorial.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n            </form>\r\n\r\n            {currentTutorial.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteTutorial}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateTutorial}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Tutorial...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TutorialsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n    this.searchTitle = this.searchTitle.bind(this);\r\n\r\n    this.state = {\r\n      tutorials: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n      searchTitle: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveTutorials();\r\n  }\r\n\r\n  onChangeSearchTitle(e) {\r\n    const searchTitle = e.target.value;\r\n\r\n    this.setState({\r\n      searchTitle: searchTitle\r\n    });\r\n  }\r\n\r\n  retrieveTutorials() {\r\n    TutorialDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          tutorials: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveTutorials();\r\n    this.setState({\r\n      currentTutorial: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveTutorial(tutorial, index) {\r\n    this.setState({\r\n      currentTutorial: tutorial,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllTutorials() {\r\n    TutorialDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchTitle() {\r\n    TutorialDataService.findByTitle(this.state.searchTitle)\r\n      .then(response => {\r\n        this.setState({\r\n          tutorials: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchTitle, tutorials, currentTutorial, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by title\"\r\n              value={searchTitle}\r\n              onChange={this.onChangeSearchTitle}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchTitle}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Tutorials List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {tutorials &&\r\n              tutorials.map((tutorial, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                  key={index}\r\n                >\r\n                  {tutorial.title}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllTutorials}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentTutorial ? (\r\n            <div>\r\n              <h4>Tutorial</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Title:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.title}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Description:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.description}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/tutorials/\" + currentTutorial.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Tutorial...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport Tutorial from \"./components/tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/tutorials\"} className=\"navbar-brand\">\n            bezKoder\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Tutorials\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}